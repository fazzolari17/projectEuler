"""
Pentagon Numbers

Pentagonal numbers are generated by the formula, P_n=n(3n-1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, \dots
It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. However, their difference, 70 - 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, P_j and P_k, for which their sum and difference are pentagonal and D = |P_k - P_j| is minimised; what is the value of D?

Link to the problem:
    https://projecteuler.net/problem=44
"""

def pentagonal_numbers(limit: int):
    pentagonal_numbers = set()

    for n in range(1, limit+1):
        pentagonal_numbers.add(int(n*(3*n-1)/2))

    for j in range(1, len(pentagonal_numbers)):
        for k in range(j+1, len(pentagonal_numbers)):
            # generating the numbers on the fly and checking them in a set makes this much much faster 
            # than using a list and looking up the values in the list
            p_j = int(j*(3*j-1)/2)
            p_k = int(k*(3*k-1)/2)
            total = p_j + p_k
            difference = p_k - p_j
            
            if total in pentagonal_numbers and difference in pentagonal_numbers:
                print(f"{p_k} + {p_j} = {p_k + p_j}")
                print(f"{p_k} - {p_j} = {p_k - p_j}")
                return p_k - p_j

if __name__ == "__main__": 
    answer = pentagonal_numbers(5000)
    print(f"The answer is {answer}")